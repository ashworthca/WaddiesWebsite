{
  "rules": {
    ".read": "auth != null",
    ".write": false,

    "niners": {
      ".indexOn": ["timestamp"],
      ".read": "auth != null",
      ".write": "auth != null"
    },

    "players": {
      ".read": "auth != null",
      "$playerId": {
        ".read": "auth != null",
        ".write": "auth != null",
        "id": { ".validate": "newData.isString()" },
        "name": { ".validate": "newData.isString()" },
        "email": { ".validate": "!newData.exists() || newData.isString()" },
        "emailPrivacy": { ".validate": "!newData.exists() || newData.isBoolean()" },
        "isActive": { ".validate": "newData.isBoolean()" },
        "updatedAt": { ".validate": "newData.val() == now || newData.isNumber()" },
        "previousIDs": {
          "$oldId": { ".validate": "newData.val() == true" }
        }
      }
    },

    "games": {
      ".read": "auth != null",
      "$gameId": {
        ".read": "auth != null",
        ".write": "auth != null && (auth.token.email == 'admin@waddies.app' ? true : (newData.exists() && newData.child('isComplete').val() == true && newData.child('isDisputed').val() != true && newData.child('noStats').val() != true))",

        "id": { ".validate": "newData.isString()" },
        "date": { ".validate": "newData.isNumber()" },
        "startTime": { ".validate": "!newData.exists() || newData.isNumber()" },
        "endTime": { ".validate": "!newData.exists() || newData.isNumber()" },
        "updatedAt": { ".validate": "newData.val() == now || newData.isNumber()" },
        "isComplete": { ".validate": "newData.isBoolean()" },
        "noStats": { ".validate": "newData.isBoolean()" },
        "isDisputed": { ".validate": "newData.isBoolean()" },
        "excludeFromSpeed": { ".validate": "newData.isBoolean()" },
        "gameType": { ".validate": "newData.isString()" },
        "scoringMode": { ".validate": "!newData.exists() || (newData.isString() && (newData.val() == 'standard' || newData.val() == 'teamAttempts'))" },

        "teams": {
          "team1": {
            "id": { ".validate": "newData.isString()" },
            "name": { ".validate": "newData.isString()" },
            "color": { ".validate": "newData.isString()" },
            "players": {
              "$pid": { ".validate": "newData.hasChildren(['name']) && newData.child('name').isString()" }
            },
            "score": { ".validate": "newData.isNumber()" }
          },
          "team2": {
            "id": { ".validate": "newData.isString()" },
            "name": { ".validate": "newData.isString()" },
            "color": { ".validate": "newData.isString()" },
            "players": {
              "$pid": { ".validate": "newData.hasChildren(['name']) && newData.child('name').isString()" }
            },
            "score": { ".validate": "newData.isNumber()" }
          }
        },

        "winner": {
          "id": { ".validate": "newData.isString()" },
          "players": {
            "$pid": { ".validate": "newData.hasChildren(['name']) && newData.child('name').isString()" }
          }
        },

        "rounds": {
          "$roundIdx": {
            "roundNumber": { ".validate": "newData.isNumber()" },
            "timestamp": { ".validate": "newData.isNumber()" },
            "scores": {
              "$pid": { ".validate": "newData.isNumber()" }
            },
            "waddieStats": {
              "$pid": {
                "thrown": { ".validate": "newData.isBoolean()" },
                "onBoard": { ".validate": "newData.isBoolean()" },
                "holed": { ".validate": "newData.isBoolean()" }
              }
            },
            "closingStats": {
              "$pid": {
                "opportunity": { ".validate": "newData.isBoolean()" },
                "success": { ".validate": "newData.isBoolean()" }
              }
            },
            "team1AttemptsRaw": {
              "onBoard": { ".validate": "newData.isNumber()" },
              "holed": { ".validate": "newData.isNumber()" }
            },
            "team2AttemptsRaw": {
              "onBoard": { ".validate": "newData.isNumber()" },
              "holed": { ".validate": "newData.isNumber()" }
            },
            "attemptsRaw": {
              "$pid": {
                "thrown": { ".validate": "newData.isNumber()" },
                "onBoard": { ".validate": "newData.isNumber()" },
                "holed": { ".validate": "newData.isNumber()" }
              }
            }
          }
        }
      }
    },

    "player-rounds": {
      "$playerId": {
        ".read": "auth != null",
        ".write": "auth != null && auth.token.email == 'admin@waddies.app'",
        "$gameId": {
          ".write": "auth != null",
          "meta": {
            "gameID": { ".validate": "newData.isString()" },
            "teamName": { ".validate": "newData.isString()" },
            "teamColor": { ".validate": "newData.isString()" },
            "isValid": { ".validate": "newData.isBoolean()" },
            "gameType": { ".validate": "newData.isString()" },
            "isWin": { ".validate": "newData.isBoolean()" },
            "teamScore": { ".validate": "newData.isNumber()" },
            "opponentScore": { ".validate": "newData.isNumber()" },
            "teammates": { "$idx": { ".validate": "newData.isString()" } },
            "opponents": { "$idx": { ".validate": "newData.isString()" } }
          },
          "rounds": {
            "$roundNum": {
              "roundNumber": { ".validate": "newData.isNumber()" },
              "score": { ".validate": "newData.isNumber()" },
              "timestamp": { ".validate": "newData.isNumber()" },
              "waddieStats": {
                "thrown": { ".validate": "newData.isBoolean()" },
                "onBoard": { ".validate": "newData.isBoolean()" },
                "holed": { ".validate": "newData.isBoolean()" }
              },
              "closingStats": {
                "opportunity": { ".validate": "newData.isBoolean()" },
                "success": { ".validate": "newData.isBoolean()" }
              },
              "waddieCounts": {
                "thrown": { ".validate": "newData.isNumber()" },
                "onBoard": { ".validate": "newData.isNumber()" },
                "holed": { ".validate": "newData.isNumber()" }
              },
              "isValid": { ".validate": "!newData.exists() || newData.isBoolean()" }
            }
          }
        }
      }
    }
  }
}